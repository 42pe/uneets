// turns a button into a link-like thing
@mixin button-to-anchor() {
  display: inline;
  border: none;
  outline: none;
  box-shadow: none;
  background-color: transparent;
  padding: 0;
  cursor: pointer;
  text-align: left;
}

@mixin wysiwyg-styles() {
  h2, h3, h4, h5, h6 {
    font-weight: bold;
    margin-bottom: 0.5em;
  }
  h2 {
    font-size: map-get($fzs, 2xl);
  }
  h3 {
    font-size: map-get($fzs, xl);
  }
  h4 {
    font-size: map-get($fzs, l);
  }
  h5 {
    font-size: map-get($fzs, m);
  }
  h6 {
    font-size: map-get($fzs, base);
  }
  p {
    display: inline-block;
    margin-bottom: 20px;
    line-height: 1.4em;
  }
  ul, ol {
    list-style-position: inside;
    display: block;
    margin-bottom: 20px;
    ul, ol {
      margin-bottom: 0;
      padding-left: 10px;
    }
    ul {
      list-style-type: circle;
    }
    ol {
      list-style-type: decimal;
    }
  }
  ul {
    list-style-type: disc;
  }
  ol {
    list-style-type: decimal;
  }
  img {
    max-width: 100%;
  }
}

// /// Triangle helper mixin
// /// @param {Direction} $direction - Triangle direction, either `top`, `right`, `bottom` or `left`
// /// @param {Color} $color [currentcolor] - Triangle color
// /// @param {Length} $size [1em] - Triangle size
// /// https://css-tricks.com/snippets/sass/css-triangle-mixin/
// @mixin triangle($direction, $color: currentcolor, $size: 1em) {
//   @if not index(top right bottom left, $direction) {
//     @error "Direction must be either `top`, `right`, `bottom` or `left`.";
//   }

//   width: 0;
//   height: 0;
//   content: '';
//   z-index: 2;
//   display: inline-block;
//   border-#{opposite-direction($direction)}: ($size * 1.5) solid $color;

//   $perpendicular-borders: $size solid transparent;

//   @if $direction == top or $direction == bottom {
//     border-left: $perpendicular-borders;
//     border-right: $perpendicular-borders;
//   } @else if $direction == right or $direction == left {
//     border-bottom: $perpendicular-borders;
//     border-top: $perpendicular-borders;
//   }
// }

// /// Returns the opposite direction of each direction in a list
// /// @author Hugo Giraudel
// /// @param {List} directions - List of initial directions
// /// @return {List} - List of opposite directions
// @function opposite-direction(directions) {
//   $opposite-directions: ();
//   $direction-map: (
//     'top': 'bottom',
//     'right': 'left',
//     'bottom': 'top',
//     'left': 'right',
//     'center': 'center',
//     'ltr': 'rtl',
//     'rtl': 'ltr'
//   );

//   @each $direction in directions {
//     $direction: to-lower-case($direction);

//     @if map-has-key($direction-map, $direction) {
//       $opposite-directions: append(
//         $opposite-directions,
//         unquote(map-get($direction-map, $direction))
//       );
//     } @else {
//       @warn "No opposite direction can be found for `#{$direction}`. Direction omitted.";
//     }
//   }

//   @return $opposite-directions;
// }
